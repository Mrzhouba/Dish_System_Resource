<?xml version="1.0"?>

<launch>

  <arg name="ip_ur3" default="192.168.1.185"/>
  <arg name="ip_ur10" default="192.168.1.186"/>
  <arg name="limited_ur3" default="false"/>
  <arg name="limited_ur10" default="false"/>
  <arg name="min_payload_ur3"  default="0.0"/>
  <arg name="max_payload_ur3"  default="3.0"/>
  <arg name="min_payload_ur10"  default="0.0"/>
  <arg name="max_payload_ur10"  default="10.0"/>
  <arg name="prefix_ur3" default="ur3_" />
  <arg name="prefix_ur10" default="ur10_" />
  <arg name="controller_name_ur3" default="ur3"/>
  <arg name="controller_name_ur10" default="ur10"/>
  <arg name="max_velocity_ur3" default="10.0"/> <!-- [rad/s] -->
  <arg name="max_velocity_ur10" default="10.0"/> <!-- [rad/s] -->

  <!-- dual_arm_robot model -->
  <include file="$(find dual_arm_car_grippers_modern_driver)/launch/dual_arm_car_grippers_upload.launch">
    <arg name="limited_ur3" value="$(arg limited_ur3)"/>
    <arg name="prefix_ur3" value="$(arg prefix_ur3)"/>
    <arg name="limited_ur10" value="$(arg limited_ur10)"/>
    <arg name="prefix_ur10" value="$(arg prefix_ur10)"/>
  </include>

  <!-- ::: ur3 driver ::: -->
  <group ns="$(arg controller_name_ur3)">
    <remap from="joint_states" to="/joint_states"/>
    <!-- ur3 hardware interface -->
    <node name="ur_hardware_interface" pkg="ur_modern_driver" type="ur_driver" output="screen" launch-prefix="">
      <param name="robot_ip_address" type="str" value="$(arg ip_ur3)"/>
      <param name="min_payload" type="double" value="$(arg min_payload_ur3)"/>
      <param name="max_payload" type="double" value="$(arg max_payload_ur3)"/>
      <param name="max_velocity" type="double" value="$(arg max_velocity_ur3)"/>
      <param name="use_ros_control" type="bool" value="True"/>
      <param name="prefix" value="$(arg prefix_ur3)" />
    </node>
    
    <!-- ur3 controller settings -->
    <rosparam file="$(find dual_arm_car_grippers_modern_driver)/config/ur3_controllers.yaml" command="load"/>

    <!-- ur3 spawn controller manager -->
    <node name="ros_control_controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" args="ur3_joint_state_controller ur3_force_torque_sensor_controller ur3_velocity_based_position_trajectory_controller --shutdown-timeout 1" />

    <!-- ur3 load other controllers (admittance controller)
    <node name="ros_control_controller_manager" pkg="controller_manager" type="controller_manager" respawn="false"
    output="screen" args="load ur3_vel_based_admittance_traj_controller" /> -->

    <!-- ur3 Convert joint states to /tf tranforms -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
  </group>


  <!-- ::: ur10 driver ::: -->
  <group ns="$(arg controller_name_ur10)">
    <remap from="joint_states" to="/joint_states"/>
    <!-- ur10 hardware interface -->
    <node name="ur_hardware_interface" pkg="ur_modern_driver" type="ur_driver" output="screen" launch-prefix="">
      <param name="reverse_port" type="int" value="5002"/>
      <param name="robot_ip_address" type="str" value="$(arg ip_ur10)"/>
      <param name="min_payload" type="double" value="$(arg min_payload_ur10)"/>
      <param name="max_payload" type="double" value="$(arg max_payload_ur10)"/>
      <param name="max_velocity" type="double" value="$(arg max_velocity_ur10)"/>
      <param name="use_ros_control" type="bool" value="True"/>
      <param name="prefix" value="$(arg prefix_ur10)" />
    </node>
    
    <!-- ur10 controller settings -->
    <rosparam file="$(find dual_arm_car_grippers_modern_driver)/config/ur10_controllers.yaml" command="load"/>

    <!-- ur10 spawn controller manager -->
    <node name="ros_control_controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" args="ur10_joint_state_controller ur10_force_torque_sensor_controller ur10_vel_based_pos_traj_controller --shutdown-timeout 1" />

    <!-- ur10 load other controllers (admittance controller)
    <node name="ros_control_controller_manager" pkg="controller_manager" type="controller_manager" respawn="false"
    output="screen" args="load ur10_vel_based_admittance_traj_controller" /> -->

    <!-- ur10 Convert joint states to /tf tranforms -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
  </group>

</launch>
